package net.sf.drftpd.master;

import java.io.Serializable;
//import ranab.io.VirtualDirectory;
import java.net.InetAddress;
import java.rmi.server.UID;
import java.util.Collection;
import java.util.Vector;

/**
 * Generic user class. 
 *
 * @author <a href="mailto:rana_b@yahoo.com">Rana Bhattacharyya</a>
 */

public abstract class User implements Serializable {

	private String username;
	private String password;
	// hmmm, perhaps a callback class for password authentication?
	// if we are to support many different ways of authentication the password verification method
	// must support any number of ways of authenticating
	private String comment;
	private String root;
	private String homeDirectory;
	private String tagline;

	//collections
	private Vector groups = new Vector(1);
	private Vector ipMasks = new Vector(1);
	
	//limits
	private int maxUploadRate;
	private int maxDownloadRate;
	private int maxSimUploads;
	private int maxSimDownloads;

	// time limits
	private int idleTime = 0; // no limit
	private int loginTime = 0;
	private int lastAccessTime = 0;
	private int timelimit;

	private float ratio;
	private long credits;

	//flags
	private transient boolean loggedIn;
	private boolean admin;
	private boolean nuker;
	private boolean deleted;
	private boolean anonymous;
	
	/**
	 * Time last nuked specified in seconds since 1970
	 */
	private int lastNuked;
	
	//limits
	private int maxLogins;
	private int maxLoginsPerIP;


	//misc counters
	private int timeToday;

	//action counters
	private int logins;
	private int nuked;

	//byte counters
	private long nukedBytes;
	private long uploadedBytes;
	private long downloadedBytes;
	private long uploadedBytesWeek;
	private long downloadedBytesWeek;
	private long uploadedBytesMonth;
	private long downloadedBytesMonth;
	private long downloadedBytesDay;
	private long uploadedBytesDay;
	
	private String sessionId = null;
	/**
	 * Constructor, set session id and default virtual directory object.
	 */
	public User() {
	}
	
	/**
	 * authenticates and logs in the user.
	 * @param user given password
	 */
	public abstract boolean login(String password);

	//////////////////////////////// generic getters & setters ///////////////////////
	
	public void addIPMask(String mask) {
		ipMasks.add(mask);
	}
	public void addGroup(String group) {
		groups.add(group);
	}
	
	////////////////////////////////// autogenerated getters & setters below /////////////////////////////
	/**
	 * Get the user name.
	 */
	public String getUsername() {
		return username;
	}

	public String getComment() {
		return comment;
	}
	public void setComment(String comment) {
		this.comment = comment;
	}

	public String getRoot() {
		return root;
	}
	public void setRoot(String root) {
		this.root = root;
	}

	public int getMaxSimDownloads() {
		return maxSimDownloads;
	}
	public void setMaxSimDownloads(int maxSimDownloads) {
		this.maxSimDownloads = maxSimDownloads;
	}

	/**
	 * Returns the maxSimUploads.
	 * @return int
	 */
	public int getMaxSimUploads() {
		return maxSimUploads;
	}

	/**
	 * Sets the maxSimUploads.
	 * @param maxSimUploads The maxSimUploads to set
	 */
	public void setMaxSimUploads(int maxSimUploads) {
		this.maxSimUploads = maxSimUploads;
	}
	/**
	 * Set user name.
	 */
	public void setUsername(String username) {
		this.username = username;
	}

	/**
	 * Get the user password.
	 */
	public String getPassword() {
		return password;
	}

	/**
	 * Set user password
	 */
	public void setPassword(String pass) {
		password = pass;
	}

	/**
	 * Get the maximum idle time in second.
	 */
	public int getMaxIdleTime() {
		return idleTime;
	}

	/**
	 * Set the maximum idle time in second.
	 */
	public void setMaxIdleTime(int idleTime) {
		this.idleTime = idleTime;
	}

	/**
	 * Get maximum user upload rate in bytes/sec.
	 */
	public int getMaxUploadRate() {
		return maxUploadRate;
	}

	/**
	 * Set user maximum upload rate limit.
	 * Less than or equal to zero means no limit.
	 */
	public void setMaxUploadRate(int rate) {
		maxUploadRate = rate;
	}

	/**
	 * Get maximum user download rate in bytes/sec
	 */
	public int getMaxDownloadRate() {
		return maxDownloadRate;
	}

	/**
	 * Set user maximum download rate limit.
	 * Less than or equal to zero means no limit.
	 */
	public void setMaxDownloadRate(int rate) {
		maxDownloadRate = rate;
	}

	/**
	 * Get user loglin time.
	 */
	public int getLoginTime() {
		return loginTime;
	}

	/**
	 * Get last access time
	 */
	public long getLastAccessTime() {
		return lastAccessTime;
	}

	/**
	 * Check the user login status.
	 */
	public boolean hasLoggedIn() {
		return loginTime != 0;
	}

	/**
	 * User login.
	 */
	public void login() {
		loginTime = (int)System.currentTimeMillis()/1000;
		lastAccessTime = loginTime;
		loggedIn = true;
	}

	/**
	 * User logout
	 */
	public void logout() {
		loginTime = 0;
		loggedIn = false;
	}

	/**
	 * Is an active user (is removable)?
	 * Compares the last access time with the specified time.
	 */
	public boolean isActive(long currTime) {
		boolean bActive = true;
		long maxIdleTime = getMaxIdleTime() * 1000; // milliseconds
		if (maxIdleTime != 0L) {
			long idleTime = currTime - lastAccessTime;
			bActive = maxIdleTime > idleTime;
		}
		return bActive;
	}

	/**
	 * Is still active. Compares the last access time with the
	 * current time.
	 */
	public boolean isActive() {
		return isActive(System.currentTimeMillis());
	}

	/**
	 * Hit user - update last access time
	 */
	public void hitUser() {
		lastAccessTime = (int)System.currentTimeMillis()*1000;
	}

	/**
	 * Equality check.
	 */
	public boolean equals(Object obj) {
		if (obj instanceof User) {
			return ((User)obj).getUsername().equals(getUsername());
		}
		return false;
	}

	/** 
	 * String representation
	 */
	public String toString() {
		return username;
	}

	/**
	 * Returns the maxLogins.
	 * @return int
	 */
	public int getMaxLogins() {
		return maxLogins;
	}

	/**
	 * Returns the maxLoginsPerIP.
	 * @return int
	 */
	public int getMaxLoginsPerIP() {
		return maxLoginsPerIP;
	}

	/**
	 * Sets the maxLogins.
	 * @param maxLogins The maxLogins to set
	 */
	public void setMaxLogins(int maxLogins) {
		this.maxLogins = maxLogins;
	}

	/**
	 * Sets the maxLoginsPerIP.
	 * @param maxLoginsPerIP The maxLoginsPerIP to set
	 */
	public void setMaxLoginsPerIP(int maxLoginsPerIP) {
		this.maxLoginsPerIP = maxLoginsPerIP;
	}

	/**
	 * Returns the admin.
	 * @return boolean
	 */
	public boolean isAdmin() {
		return admin;
	}

	/**
	 * Returns the nuker.
	 * @return boolean
	 */
	public boolean isNuker() {
		return nuker;
	}

	/**
	 * Returns the tagline.
	 * @return String
	 */
	public String getTagline() {
		return tagline;
	}

	/**
	 * Sets the admin.
	 * @param admin The admin to set
	 */
	public void setAdmin(boolean admin) {
		this.admin = admin;
	}

	/**
	 * Sets the nuker.
	 * @param nuker The nuker to set
	 */
	public void setNuker(boolean nuker) {
		this.nuker = nuker;
	}

	/**
	 * Sets the tagline.
	 * @param tagline The tagline to set
	 */
	public void setTagline(String tagline) {
		this.tagline = tagline;
	}

	/**
	 * Returns the homeDirectory.
	 * @return String
	 */
	public String getHomeDirectory() {
		return homeDirectory;
	}

	/**
	 * Sets the homeDirectory.
	 * @param homeDirectory The homeDirectory to set
	 */
	public void setHomeDirectory(String homeDirectory) {
		this.homeDirectory = homeDirectory;
	}

	/**
	 * Returns the credits.
	 * @return long
	 */
	public long getCredits() {
		return credits;
	}

	/**
	 * Returns the idleTime.
	 * @return long
	 */
	public long getIdleTime() {
		return idleTime;
	}

	/**
	 * Returns the logins.
	 * @return int
	 */
	public int getLogins() {
		return logins;
	}

	/**
	 * Returns the ratio.
	 * @return float
	 */
	public float getRatio() {
		return ratio;
	}

	/**
	 * Sets the credits.
	 * @param credits The credits to set
	 */
	public void setCredits(long credits) {
		this.credits = credits;
	}

	/**
	 * Sets the idleTime.
	 * @param idleTime The idleTime to set
	 */
	public void setIdleTime(int idleTime) {
		this.idleTime = idleTime;
	}

	/**
	 * Sets the logins.
	 * @param logins The logins to set
	 */
	public void setLogins(int logins) {
		this.logins = logins;
	}

	/**
	 * Sets the ratio.
	 * @param ratio The ratio to set
	 */
	public void setRatio(float ratio) {
		this.ratio = ratio;
	}

	/**
	 * Returns the downloadedBytes.
	 * @return long
	 */
	public long getDownloadedBytes() {
		return downloadedBytes;
	}

	/**
	 * Returns the downloadedBytesMonth.
	 * @return long
	 */
	public long getDownloadedBytesMonth() {
		return downloadedBytesMonth;
	}

	/**
	 * Returns the downloadedBytesWeek.
	 * @return long
	 */
	public long getDownloadedBytesWeek() {
		return downloadedBytesWeek;
	}

	/**
	 * Returns the uploadedBytes.
	 * @return long
	 */
	public long getUploadedBytes() {
		return uploadedBytes;
	}

	/**
	 * Returns the uploadedBytesMonth.
	 * @return long
	 */
	public long getUploadedBytesMonth() {
		return uploadedBytesMonth;
	}

	/**
	 * Returns the uploadedBytesWeek.
	 * @return long
	 */
	public long getUploadedBytesWeek() {
		return uploadedBytesWeek;
	}

	/**
	 * Sets the downloadedBytes.
	 * @param downloadedBytes The downloadedBytes to set
	 */
	public void setDownloadedBytes(long downloadedBytes) {
		this.downloadedBytes = downloadedBytes;
	}

	/**
	 * Sets the downloadedBytesMonth.
	 * @param downloadedBytesMonth The downloadedBytesMonth to set
	 */
	public void setDownloadedBytesMonth(long downloadedBytesMonth) {
		this.downloadedBytesMonth = downloadedBytesMonth;
	}

	/**
	 * Sets the downloadedBytesWeek.
	 * @param downloadedBytesWeek The downloadedBytesWeek to set
	 */
	public void setDownloadedBytesWeek(long downloadedBytesWeek) {
		this.downloadedBytesWeek = downloadedBytesWeek;
	}

	/**
	 * Sets the uploadedBytes.
	 * @param uploadedBytes The uploadedBytes to set
	 */
	public void setUploadedBytes(long uploadedBytes) {
		this.uploadedBytes = uploadedBytes;
	}

	/**
	 * Sets the uploadedBytesMonth.
	 * @param uploadedBytesMonth The uploadedBytesMonth to set
	 */
	public void setUploadedBytesMonth(long uploadedBytesMonth) {
		this.uploadedBytesMonth = uploadedBytesMonth;
	}

	/**
	 * Sets the uploadedBytesWeek.
	 * @param uploadedBytesWeek The uploadedBytesWeek to set
	 */
	public void setUploadedBytesWeek(long uploadedBytesWeek) {
		this.uploadedBytesWeek = uploadedBytesWeek;
	}

	/**
	 * Returns the downloadedBytesDay.
	 * @return long
	 */
	public long getDownloadedBytesDay() {
		return downloadedBytesDay;
	}

	/**
	 * Returns the uploadedBytesDay.
	 * @return long
	 */
	public long getUploadedBytesDay() {
		return uploadedBytesDay;
	}

	/**
	 * Sets the downloadedBytesDay.
	 * @param downloadedBytesDay The downloadedBytesDay to set
	 */
	public void setDownloadedBytesDay(long downloadedBytesDay) {
		this.downloadedBytesDay = downloadedBytesDay;
	}

	/**
	 * Sets the uploadedBytesDay.
	 * @param uploadedBytesDay The uploadedBytesDay to set
	 */
	public void setUploadedBytesDay(long uploadedBytesDay) {
		this.uploadedBytesDay = uploadedBytesDay;
	}

	/**
	 * Returns the deleted.
	 * @return boolean
	 */
	public boolean isDeleted() {
		return deleted;
	}

	/**
	 * Sets the deleted.
	 * @param deleted The deleted to set
	 */
	public void setDeleted(boolean deleted) {
		this.deleted = deleted;
	}

	/**
	 * Returns the lastNuked.
	 * @return long
	 */
	public int getLastNuked() {
		return lastNuked;
	}

	/**
	 * Returns the nuked.
	 * @return int
	 */
	public int getNuked() {
		return nuked;
	}

	/**
	 * Returns the nukedBytes.
	 * @return long
	 */
	public long getNukedBytes() {
		return nukedBytes;
	}

	/**
	 * Sets the lastNuked.
	 * @param lastNuked The lastNuked to set
	 */
	public void setLastNuked(int lastNuked) {
		this.lastNuked = lastNuked;
	}

	/**
	 * Sets the nuked.
	 * @param nuked The nuked to set
	 */
	public void setNuked(int nuked) {
		this.nuked = nuked;
	}

	/**
	 * Sets the nukedBytes.
	 * @param nukedBytes The nukedBytes to set
	 */
	public void setNukedBytes(long nukedBytes) {
		this.nukedBytes = nukedBytes;
	}

	/**
	 * Returns the anonymous.
	 * @return boolean
	 */
	public boolean isAnonymous() {
		return anonymous;
	}

	/**
	 * Sets the anonymous.
	 * @param anonymous The anonymous to set
	 */
	public void setAnonymous(boolean anonymous) {
		this.anonymous = anonymous;
	}

	/**
	 * Sets the lastAccessTime.
	 * @param lastAccessTime The lastAccessTime to set
	 */
	public void setLastAccessTime(int lastAccessTime) {
		this.lastAccessTime = lastAccessTime;
	}

	/**
	 * Returns the timeToday.
	 * @return long
	 */
	public long v() {
		return timeToday;
	}

	/**
	 * Sets the timeToday.
	 * @param timeToday The timeToday to set
	 */
	public void setTimeToday(int timeToday) {
		this.timeToday = timeToday;
	}

	/**
	 * Returns the timelimit.
	 * @return int
	 */
	public int getTimelimit() {
		return timelimit;
	}

	/**
	 * Returns the timeToday.
	 * @return int
	 */
	public int getTimeToday() {
		return timeToday;
	}

	/**
	 * Sets the timelimit.
	 * @param timelimit The timelimit to set
	 */
	public void setTimelimit(int timelimit) {
		this.timelimit = timelimit;
	}

	/**
	 * Returns the groups.
	 * @return Vector
	 */
	public Collection getGroups() {
		return groups;
	}

	/**
	 * Returns the loggedIn.
	 * @return boolean
	 */
	public boolean isLoggedIn() {
		return loggedIn;
	}

	/**
	 * Sets the loggedIn.
	 * @param loggedIn The loggedIn to set
	 */
	public void setLoggedIn(boolean loggedIn) {
		this.loggedIn = loggedIn;
	}

}
