# $Id$
find {
plugin org.drftpd.commands.find
class Find
method doFIND
perms *
limit.default 5
limit.max 20
sendToSlaves =siteop
deleteFromSlaves =siteop
wipe =siteop
nuke =siteop =nuke
help Searches for files and directories in the filesystem w/ some neat filters and actions.
help.specific ${command} <options>
help.specific Options: -user <user> | -group <group> | -f[ile] | -d[ir] | -section <section>
help.specific Options: -slaves <slave[,slave,..]> | -age <start date> <end date> | -quiet
help.specific Valid format: yyyy.MM.dd OR yyyy.MM.dd.HH.mm.ss, Example: 2010.01.29.08.36.33
help.specific Options: -0byte | -size <min size> <max size> | -sort <field> <asc|desc>
help.specific Valid sort fields: parentPath fullPath(default) owner group type lastmodified size
help.specific Options: -limit <number> | -exact | -name <["]word[ word .."]> | -endswith <name>
help.specific Exact option makes the name option search for the exact file/dir name specified.
help.specific Wildcards(* and ?) available but not within the first three chars.
help.specific Actions: print, printf[(format)], wipe, delete
help.specific Actions: nuke <multiplier[:reason]]> | unnuke [reason]
help.specific Action: sendtoslaves <numtransfers[:slave[,slave,..][:priority]]>
help.specific Action: deletefromslaves <slave[,slave[,...]]>
help.specific Options for printf format:
help.specific #f - name
help.specific #p . path
help.specific #h - parent
help.specific #s - size
help.specific #u - user
help.specific #g - group
help.specific #x - slave
help.specific #t - last modified
help.specific Example: SITE FIND -action printf(filename: #f size: #s)
help.specific Multiple options are allowed. If multiple options are given a file/dir must match all options.
input all
output source
}

search {
plugin org.drftpd.commands.find
class Search
method doSEARCH
perms *
limit 5
help Searches for files and directories using wildcards.
help.specific ${command} <word> [word ..]
input all
output source
}

dupe {
plugin org.drftpd.commands.find
class Search
method doDUPE
perms *
limit 5
help Searches for files and directories using exact name match.
help.specific ${command} <name>
input all
output source
}